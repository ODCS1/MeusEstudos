import 'package:flutter/material.dart';


void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: NewsTimeline(),
    );
  }
}

class NewsTimeline extends StatefulWidget {
  @override
  _NewsTimelineState createState() => _NewsTimelineState();
}

class _NewsTimelineState extends State<NewsTimeline> {

  
  List<Map<String, dynamic>> noticias = [
    {
      'source': 'COTUCA',
      'timeAgo': '2 horas',
      'liked': true,
      'text': 'Muitas escolas técnicas enfrentam dificuldades de financiamento, especialmente em áreas afastadas, comprometendo a qualidade do ensino e o acesso à formação profissional de qualidade.',
      
      'image': 'https://ix-www.imgix.net/case-study/unsplash/unsplash01.jpg?ixlib=js-3.8.0&auto=compress%2Cformat&w=1800',
      'layoutStyle': 'column'
    },
    {
      'source': 'GNT',
      'timeAgo': '4 horas',
      'liked': false,
      'text': 'Alunos de escolas técnicas agora têm mais oportunidades de estágios em empresas parceiras, garantindo uma entrada mais rápida no mercado de trabalho e experiência prática.',
      
      'image': 'https://ix-www.imgix.net/case-study/unsplash/woman-hat.jpg?ixlib=js-3.8.0&w=400&auto=compress%2Cformat&dpr=2&q=50',
      'layoutStyle': 'column'
    },
    {
      'source': 'Globo News',
      'timeAgo': '1 dia',
      'liked': false,
      'text': 'Alunos de escolas técnicas estão cada vez mais criando suas próprias empresas',
      
      'image': 'https://ix-www.imgix.net/case-study/eventbrite/eventbrite10.jpg?ixlib=js-3.8.0&auto=format%2Ccompress&fit=crop&crop=top&ar=1920%3A780&w=1920',
      'layoutStyle': 'row'
    }
  ];
  
  
  late List<Map<String, dynamic>> noticiasOriginal;
  
  
  @override
  void initState() {
    super.initState();
    noticiasOriginal = List.from(noticias);
  }
  
  void toggleFavorito(int index) {
     setState(() {
       noticias[index]['liked'] = !noticias[index]['liked'];
     });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('NewsFeed :: <Coloque Aqui o seu Nome>'),
      ),
      body: ListView.builder(
        itemCount: noticias.length,
        itemBuilder: (context, index) {
          final noticia = noticias[index];
          return Card(
            margin: EdgeInsets.all(8),
            elevation: 4,
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Image.network(
                  noticia['image'],
                  height: 200,
                  width: double.infinity,
                  fit: BoxFit.cover,
                ),
                ListTile(
                  title: Text(
                    noticia['source'],
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                  timeAgo: Text(
                    noticia['timeAgo'],
                    maxLines: 1,
                    overflow: TextOverflow.ellipsis
                  ),
                  subtitle: Text(
                    noticia['text'],
                    maxLines: 3,
                    overflow: TextOverflow.ellipsis,
                  ),
                  trailing: IconButton(
                    icon: Icon(
                      noticia['liked'] ? Icons.favorite : Icons.favorite_border,
                      color: noticia['liked'] ? Colors.red : null,
                    ),
                    onPressed: () => toggleFavorito(index),
                  ),
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => NewsItem(
                          image: noticia['image'],
                          text: noticia['text'],
                          source: noticia['source'],
                          timeAgo: noticia['timeAgo'],
                          liked: noticia['liked'],
                          layoutStyle: noticia['layoutStyle']
                        ),
                      ),
                    );
                  },
                ),
              ],
            ),
          );
        }
      ),
    );
  }
}

class NewsItem extends StatefulWidget {
  final String image;
  final String text;
  final String source;
  final String timeAgo;
  final bool liked;
  final String layoutStyle;
  final VoidCallback onDeletePressed;

  const NewsItem({
    required this.image,
    required this.text,
    required this.source,
    required this.timeAgo,
    required this.liked,
    required this.layoutStyle,
    required this.onDeletePressed,
  });

  @override
  _NewsItemState createState() => _NewsItemState();
}

class _NewsItemState extends State<NewsItem> {
  late bool isLiked;

  @override
  void initState() {
    super.initState();
    isLiked = widget.liked;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          NewsInfoRow(
            source: widget.source,
            timeAgo: widget.timeAgo,
            isLiked: isLiked,
            onLikePressed: () {},
            onDeletePressed: widget.onDeletePressed, 
          ),
          NewsImageText(
            image: widget.image,
            text: widget.text,
            layoutStyle: widget.layoutStyle,
          ),
        ],
      ),
    );
  }
}

class NewsInfoRow extends StatelessWidget {
  final String source;
  final String timeAgo;
  final bool isLiked;
  final VoidCallback onLikePressed;
  final VoidCallback onDeletePressed;

  const NewsInfoRow({
    required this.source,
    required this.timeAgo,
    required this.isLiked,
    required this.onLikePressed,
    required this.onDeletePressed,
  });

  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Expanded(
          child: Text(
            '$source • $timeAgo',
            style: TextStyle(fontSize: 14, fontWeight: FontWeight.bold),
            overflow: TextOverflow.ellipsis,
          ),
        ),
        Row(
          children: [
            IconButton(
              icon: Icon(Icons.favorite_border,
                color: Colors.grey,
                size: 20,
              ),
              onPressed: (){},
            ),
            IconButton(
              icon: Icon(Icons.delete, size: 20),
              onPressed: (){}, 
            ),
          ],
        ),
      ],
    );
  }
}

class NewsImageText extends StatelessWidget {
  final String image;
  final String text;
  final String layoutStyle;

  const NewsImageText({
    required this.image,
    required this.text,
    required this.layoutStyle,
  });

  @override
  Widget build(BuildContext context) {
    return layoutStyle == 'row'
        ? Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Expanded(child: NewsText(text: text)),
              SizedBox(width: 8.0),
              NewsImage.small(image: image),
            ],
          )
        : Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              NewsImage(image: image),
              SizedBox(height: 8.0),
              NewsText(text: text),
            ],
          );
  }
}

class NewsImage extends StatelessWidget {
  final String image;
  final double width;
  final double height;

  const NewsImage({required this.image, this.width = 300, this.height = 200});
  const NewsImage.small(
      {required this.image, this.width = 130, this.height = 100});

  @override
  Widget build(BuildContext context) {
    return ClipRRect(
      borderRadius: BorderRadius.circular(12.0),
      child: Image.network(
        image,
        width: this.width,
        height: this.height,
        fit: BoxFit.cover,
      ),
    );
  }
}

class NewsText extends StatelessWidget {
  final String text;

  const NewsText({required this.text});

  @override
  Widget build(BuildContext context) {
    return Text(
      text,
      textAlign: TextAlign.justify,
      style: TextStyle(fontSize: 16),
    );
  }
}